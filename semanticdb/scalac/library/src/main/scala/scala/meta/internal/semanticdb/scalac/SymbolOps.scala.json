[
  {
    "id" : "5651db64-2e7f-405d-94d9-117146a1f8e7",
    "prId" : 1641,
    "comments" : [
      {
        "id" : "72758671-e272-4822-a6fa-d84526ed32a3",
        "parentId" : null,
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "What about `object foo; def foo(x: Int) = ???`? Will code like this be handled correctly?",
        "createdAt" : "2018-06-28T22:14:07Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0e3ad4e0-585f-45aa-9938-56bd1fc982c2",
        "parentId" : "72758671-e272-4822-a6fa-d84526ed32a3",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "Good question. Turns out this change was breaking the spec!\r\n\r\nI decided to change the spec to exclude overloaded objects from the computation of disambiguators because I think that preserves the nice property for method overloads that there is always one symbol with the disambiguator `()`. Previously, you would have the symbols `foo.` and `foo(+1)` from `object foo; def foo(a: Int)`\r\n\r\nMetacp and metac have been updated to the new scheme and I have added targeted + expect tests to assert the new behavior.\r\n",
        "createdAt" : "2018-06-29T08:55:46Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dd79608e-986b-455c-b294-2084ca2f7ee4",
        "parentId" : "72758671-e272-4822-a6fa-d84526ed32a3",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Sounds good.",
        "createdAt" : "2018-07-02T02:31:34Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c4a27c360098279cf8cb20062b3532047568c613",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +79,83 @@        peer.isMethod &&\n        peer.name == sym.name\n      }\n      val suffix = {\n        if (overloads.lengthCompare(1) == 0) \"\""
  },
  {
    "id" : "1734ae14-a8b4-47e1-a1ee-6f35844ea272",
    "prId" : 1575,
    "comments" : [
      {
        "id" : "47f71674-ef63-494b-b80e-6af9b746ef1f",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "ditto",
        "createdAt" : "2018-05-31T21:25:50Z",
        "updatedAt" : "2018-05-31T21:28:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "af63cb8745825d9c2b9aa7109289aed5169a1f7a",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +116,120 @@  case class SemanticdbDecls(gsyms: List[g.Symbol]) {\n    lazy val ssyms: List[String] = {\n      val sbuf = List.newBuilder[String]\n      gsyms.foreach { gsym =>\n        val ssym = gsym.toSemantic.syntax"
  },
  {
    "id" : "89a5dbfb-6b5e-4576-91d5-a9328f71d3c7",
    "prId" : 1238,
    "comments" : [
      {
        "id" : "6194e96a-6d65-475e-b541-be650de6edd0",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "I wouldn't be surprised if this change has a positive impact on file size ^^",
        "createdAt" : "2018-02-01T12:19:04Z",
        "updatedAt" : "2018-02-01T16:00:22Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "40358640-0c0e-4575-a168-3dcf668e25ab",
        "parentId" : "6194e96a-6d65-475e-b541-be650de6edd0",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Later on, we could make these names even shorter, e.g. `%0`, `%1` etc like in LLVM.",
        "createdAt" : "2018-02-01T15:09:01Z",
        "updatedAt" : "2018-02-01T16:00:22Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0295ec5950b1f4dad650d2b602c7cbe9e15b136f",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +36,40 @@              val id = idCache.get(mpos.input.syntax)\n              idCache.put(mpos.input.syntax, id + 1)\n              m.Symbol.Local(\"local\" + id.toString)\n            }\n          }"
  },
  {
    "id" : "9ae7edb3-71f4-4f37-b35f-898c61345660",
    "prId" : 1238,
    "comments" : [
      {
        "id" : "450a3137-1947-4ac5-a335-ff24ebc6757b",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "General note, I've found it incredibly awkward to use `mpos.input.syntax` as a unique key. `Input` needs more work IMO ",
        "createdAt" : "2018-02-01T12:20:21Z",
        "updatedAt" : "2018-02-01T16:00:22Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0539f461-5a55-4c15-a5e0-d9a27f1afc98",
        "parentId" : "450a3137-1947-4ac5-a335-ff24ebc6757b",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Agreed. Opened https://github.com/scalameta/scalameta/issues/1240.",
        "createdAt" : "2018-02-01T15:08:06Z",
        "updatedAt" : "2018-02-01T16:00:22Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0295ec5950b1f4dad650d2b602c7cbe9e15b136f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +34,38 @@            if (mpos == m.Position.None) m.Symbol.None\n            else {\n              val id = idCache.get(mpos.input.syntax)\n              idCache.put(mpos.input.syntax, id + 1)\n              m.Symbol.Local(\"local\" + id.toString)"
  }
]