[
  {
    "id" : "cae2db38-4dd9-43a8-a9b8-c0646cc03cfe",
    "prId" : 1726,
    "comments" : [
      {
        "id" : "d27e4152-67e6-4162-997c-a809f7a6916d",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "Why expand the args before calling `Settings.parse`? For me, this logic is the responsibility of `Settings.parse`. I don't have a strong opinion however as long as it's consistent.",
        "createdAt" : "2018-07-31T17:28:12Z",
        "updatedAt" : "2018-07-31T17:35:05Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dce80b6b-897e-4f01-bc1b-80f008e10b4e",
        "parentId" : "d27e4152-67e6-4162-997c-a809f7a6916d",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "What I had in mind here is that the `@args` expansion is only relevant to CLI invocations, since it's only the CLI invocations that are limited by the max size of a shell command. As you said, this is consistent - both within Scalameta and within Rsc.",
        "createdAt" : "2018-08-03T19:54:12Z",
        "updatedAt" : "2018-08-03T19:54:12Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "222bcbfd13d6416abb5f7ce96289c4b734cb550c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +22,26 @@\n  private def process(args: Array[String], reporter: Reporter): Int = {\n    val expandedArgs = Args.expand(args)\n    Settings.parse(expandedArgs, reporter) match {\n      case Some(settings) =>"
  },
  {
    "id" : "3c25b298-4572-4821-a434-0517d6a12b14",
    "prId" : 1238,
    "comments" : [
      {
        "id" : "70dff580-a0ae-4d24-95cf-f3882b3278d1",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "Does this work for coursier bootstrap scripts? In scalafix you implemented something custom https://github.com/scalacenter/scalafix/blob/325ad576a7c4c5e8a5286195a1a83d091c77ac2d/scalafix-reflect/src/main/scala/scalafix/internal/reflect/ScalafixToolbox.scala#L74 Any chance we can reuse?",
        "createdAt" : "2018-02-01T12:12:20Z",
        "updatedAt" : "2018-02-01T16:00:22Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cfaaa287-24a3-4ea8-b38f-395e9529cf0d",
        "parentId" : "70dff580-a0ae-4d24-95cf-f3882b3278d1",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Let's look into this separately. I added an entry to my issue tracker.",
        "createdAt" : "2018-02-01T15:30:57Z",
        "updatedAt" : "2018-02-01T16:00:22Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0295ec5950b1f4dad650d2b602c7cbe9e15b136f",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@    val pluginClasspath = classOf[SemanticdbPlugin].getClassLoader match {\n      case null => manifestDir.toString\n      case cl: URLClassLoader => cl.getURLs.map(_.getFile).mkString(File.pathSeparator)\n      case cl => sys.error(s\"unsupported classloader: $cl\")\n    }"
  }
]