[
  {
    "id" : "ef0e20a3-8e4c-4a68-a72e-3125e9d1142b",
    "prId" : 1570,
    "comments" : [
      {
        "id" : "53b52587-27c7-49aa-ae88-4ab5ebe99aae",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "There is a lot left to be desired here:\r\n\r\n* what is the callback `Path`? Is it relative or absolute? Is is a path inside a zip file or a file system path? The relative path to the `*.semanticdb` files is irrelevant since it's fair game to concatenate semanticdb files.\r\n* how to do I access semanticidx? Without it I will need to roll my own traverser in scalafix symtab.\r\n* I prefer to work with `TextDocument` instead of `TextDocuments`, this would also alleviate the need for `Path` since it seems to be only used to get the relative path of the SemanticDB file\r\n\r\nI think we can do better by taking inspiration from the `visit(AbsolutePath => FileVisitor)` interface here\r\n https://github.com/scalameta/scalameta/blob/34bd4375c36af65ac481f64b7c7205309b8b2568/scalameta/io/shared/src/main/scala/scala/meta/internal/io/package.scala#L12-L29\r\n\r\nSince this is internal API I'm happy to iterate on this in followup PRs. Here is a strawman of how `Locator` could look like\r\n\r\n```scala\r\nobject Locator {\r\n  def docs(paths: Seq[Path])(fn: TextDocument => Unit) Unit\r\n  def index(paths: Seq[Path])(fn: Index => Unit) Unit\r\n  def indexWithDocs(paths: Seq[Path])(fn: Index => TextDocument => Unit) Unit\r\n}\r\n```\r\n",
        "createdAt" : "2018-05-29T10:57:55Z",
        "updatedAt" : "2018-05-29T16:05:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "395819fa-aba8-4398-ad01-db52efab454c",
        "parentId" : "53b52587-27c7-49aa-ae88-4ab5ebe99aae",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "This is the only blocking comment, the rest of the commits LGTM 游녨 ",
        "createdAt" : "2018-05-29T12:59:42Z",
        "updatedAt" : "2018-05-29T16:05:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f660d68b-41e2-4fc8-9fdd-40d6e0a347ec",
        "parentId" : "53b52587-27c7-49aa-ae88-4ab5ebe99aae",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Please feel free to iterate on the API yourself once we merge. I don't have a strong opinion here, as long as there's an overload or something that takes a list of paths and a `TextDocument => Unit` - that we need internally at Twitter.",
        "createdAt" : "2018-05-29T16:06:38Z",
        "updatedAt" : "2018-05-29T16:06:38Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "79de6a1047866355c6ac1b46427e91840afcfc22",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@\nobject Locator {\n  def apply(paths: List[Path])(fn: (Path, TextDocuments) => Unit): Unit = {\n    paths.foreach(path => apply(path)(fn))\n  }"
  }
]