[
  {
    "id" : "b853e851-3aec-4168-8a00-789b194f61b6",
    "prId" : 808,
    "comments" : [
      {
        "id" : "675b0dea-8029-47bf-9f59-674a3890068c",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "I approve s/CompilerMessage/Message/ 游녨 much cleaner.\r\n\r\nHowever, I'm still not sold on the anchor encoding. For example, if Anchor was a Position.Range, I could use `Message` in the reporter api in scalafix (see https://github.com/scalacenter/scalafix/pull/118) and profit from `.formatMessage`\r\n\r\n```scala\r\n/path/to/bar:10 error: bad name!\r\nobject a\r\n       ^\r\n```\r\n\r\nSince Anchor is hardcoded to an AbsolutePath, it's not exactly clear if I can read the underlying file contents to  to create that formatted message.",
        "createdAt" : "2017-04-21T08:56:53Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b7bbcd44-bd7e-4081-9d05-d448fcadbf19",
        "parentId" : "675b0dea-8029-47bf-9f59-674a3890068c",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "The problem with `Position.Range` is that it is tied to an `Input`, and that's a bit more than just `AbsolutePath`.\r\n\r\nupd. Oh wow, actually `Input` fits perfectly here. It doesn't have to be `Input.File` that simply wraps an absolute path, but can also be `Input.LabeledString` in which case it will embed the contents. While the usefulness of the latter is debatable (see #777), the flexibility of `Position.Range` is clear.",
        "createdAt" : "2017-04-27T23:52:35Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a79ca740-8223-4100-8539-dacd5673f5c2",
        "parentId" : "675b0dea-8029-47bf-9f59-674a3890068c",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "The fact that it's tied to an `Input` is exactly why I think it's a good idea. For example, `Anchor` does not include the file encoding like `Input.File`, which could be problematic in some cases.\r\n\r\n`Input.LabeledString` would be a perfect fit for a `metadoc` tool I want to write, which generates a static site from a Mirror and uses Scala.js for interactive code browsing and symbol search.",
        "createdAt" : "2017-04-29T11:05:12Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "135ac817-ab09-49ab-acca-cbf3fb2d8479",
        "parentId" : "675b0dea-8029-47bf-9f59-674a3890068c",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Agreed.",
        "createdAt" : "2017-04-29T13:34:32Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ac448f5c9b3250ede75f1d0a84fb0a036943da36",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@import org.scalameta.unreachable\n\n@data class Message(anchor: Anchor, severity: Severity, message: String) {\n  override def toString = syntax\n  def syntax = s\"[${severity.toString.toLowerCase}] ${anchor.syntax}: $message\""
  },
  {
    "id" : "58e19eef-8a41-4354-9d6d-48a4760e72ca",
    "prId" : 808,
    "comments" : [
      {
        "id" : "6ea5ff4f-7b8b-4a66-8b80-c827c0300ac9",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "body" : "Side note. It would be nice to either\r\n\r\n1. port these macro annotations to meta https://github.com/scalameta/scalameta/issues/735\r\n2. document when and how these macro annotations should be used (more than showing the expanded output like here https://github.com/scalameta/scalameta/blob/master/notes/ast.md)",
        "createdAt" : "2017-04-21T08:59:29Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/1408093?u=dceadb57ba23a7bdcdd46a4f066a2d3c8d0cf717&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "deec710f-fd7e-4605-acd4-bfafa51ba0cf",
        "parentId" : "6ea5ff4f-7b8b-4a66-8b80-c827c0300ac9",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Agreed.",
        "createdAt" : "2017-04-27T23:55:51Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ac448f5c9b3250ede75f1d0a84fb0a036943da36",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@}\n\n@root trait Severity {\n  import Severity._\n  def id: Int = this match {"
  }
]