[
  {
    "id" : "1e4ee35d-3eef-496d-87c3-01efb81a97f1",
    "prId" : 832,
    "comments" : [
      {
        "id" : "efdb6d1a-6419-4fd4-9124-9cbf738924cb",
        "parentId" : null,
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "What does this code mean?",
        "createdAt" : "2017-05-03T20:53:19Z",
        "updatedAt" : "2017-05-08T13:39:10Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "14b14b86-d2f6-41c7-90f6-3e84c05f9073",
        "parentId" : "efdb6d1a-6419-4fd4-9124-9cbf738924cb",
        "author" : {
          "login" : "allanrenucci",
          "name" : "Allan Renucci",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4996324?u=67c597149723b5c3a27b376013df0a970f8389a2&v=4"
        },
        "body" : "scalac insert `()`: `<a>{(): Unit}</a>`. Same for string interpolation `s\"${}\"`",
        "createdAt" : "2017-05-03T21:02:29Z",
        "updatedAt" : "2017-05-08T13:39:10Z",
        "lastEditedBy" : {
          "login" : "allanrenucci",
          "name" : "Allan Renucci",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4996324?u=67c597149723b5c3a27b376013df0a970f8389a2&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "df40ab30-1db7-40d7-a9fc-26cf42d4798b",
        "parentId" : "efdb6d1a-6419-4fd4-9124-9cbf738924cb",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Wow this is crazy ðŸ˜® ",
        "createdAt" : "2017-05-03T21:04:59Z",
        "updatedAt" : "2017-05-08T13:39:10Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "51fbdba505079dfda70d8285ca569ec13b63c241",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +289,293 @@\n\n  checkOK(\"<a>{}</a>\")\n  checkError(\"e match { case <a>{}</a> => ??? }\")\n  //checkError(\"<a></b>\") // FIXME: Should not parse"
  },
  {
    "id" : "8b05f29d-1f03-436c-893a-aedc33bba286",
    "prId" : 823,
    "comments" : [
      {
        "id" : "04b28280-436d-453a-85f5-c579056172a4",
        "parentId" : null,
        "author" : {
          "login" : "allanrenucci",
          "name" : "Allan Renucci",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4996324?u=67c597149723b5c3a27b376013df0a970f8389a2&v=4"
        },
        "body" : "```scala\r\n            BOF [0..0) ----> class scala.meta.tokens.Token$BOF\r\n                [0..0) ----> class scala.meta.tokens.Token$Xml$Start\r\n            <a> [0..3) ----> class scala.meta.tokens.Token$Xml$Part\r\n                [3..3) ----> class scala.meta.tokens.Token$Xml$SpliceStart\r\n              { [3..4) ----> class scala.meta.tokens.Token$LeftBrace\r\n              1 [4..5) ----> class scala.meta.tokens.Token$Constant$Int\r\n              } [5..6) ----> class scala.meta.tokens.Token$RightBrace\r\n                [6..6) ----> class scala.meta.tokens.Token$Xml$SpliceEnd\r\n                [6..6) ----> class scala.meta.tokens.Token$Xml$Part\r\n                [6..6) ----> class scala.meta.tokens.Token$Xml$SpliceStart\r\n              { [6..7) ----> class scala.meta.tokens.Token$LeftBrace\r\n              2 [7..8) ----> class scala.meta.tokens.Token$Constant$Int\r\n              } [8..9) ----> class scala.meta.tokens.Token$RightBrace\r\n                [9..9) ----> class scala.meta.tokens.Token$Xml$SpliceEnd\r\n          </a> [9..13) ----> class scala.meta.tokens.Token$Xml$Part\r\n              [13..13) ----> class scala.meta.tokens.Token$Xml$End\r\n          EOF [13..13) ----> class scala.meta.tokens.Token$EOF\r\n```\r\n@olafurpg Do we want the empty `Xml.Part` between `{1}` and `{2}`?",
        "createdAt" : "2017-05-02T15:26:48Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : {
          "login" : "allanrenucci",
          "name" : "Allan Renucci",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4996324?u=67c597149723b5c3a27b376013df0a970f8389a2&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ef68b0fd-90b2-45ee-90cd-02223847dd3b",
        "parentId" : "04b28280-436d-453a-85f5-c579056172a4",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Yes, please. This is what string interpolation tokenizer is doing.\r\n\r\nWould you prefer to do this differently?",
        "createdAt" : "2017-05-02T15:44:50Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e19fa0e2-8f14-4203-a90b-002155317fbb",
        "parentId" : "04b28280-436d-453a-85f5-c579056172a4",
        "author" : {
          "login" : "allanrenucci",
          "name" : "Allan Renucci",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4996324?u=67c597149723b5c3a27b376013df0a970f8389a2&v=4"
        },
        "body" : "I am fine with both solution",
        "createdAt" : "2017-05-02T18:21:33Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : {
          "login" : "allanrenucci",
          "name" : "Allan Renucci",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4996324?u=67c597149723b5c3a27b376013df0a970f8389a2&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0efb06f0-89c1-4215-97fe-c87e2d2e45f5",
        "parentId" : "04b28280-436d-453a-85f5-c579056172a4",
        "author" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Let's emit the empty parts then. That'll be compatible with how things are done in production right now.",
        "createdAt" : "2017-05-02T18:23:50Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : "Eugene Burmako",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8d764507-d3ab-4985-8031-7cbc6fb0803d",
        "parentId" : "04b28280-436d-453a-85f5-c579056172a4",
        "author" : {
          "login" : "allanrenucci",
          "name" : "Allan Renucci",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4996324?u=67c597149723b5c3a27b376013df0a970f8389a2&v=4"
        },
        "body" : "That's the current behaviour. I'll add test case",
        "createdAt" : "2017-05-02T18:25:58Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : {
          "login" : "allanrenucci",
          "name" : "Allan Renucci",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4996324?u=67c597149723b5c3a27b376013df0a970f8389a2&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dc6deadf596cfcafab3cf4911dd353eed05ca5b0",
    "line" : 260,
    "diffHunk" : "@@ -1,1 +258,262 @@  checkOK(\"<foo a={<bar/><bat/>}/>\")\n  checkOK(\"<a>{ List(1, 2) }</a>\")\n  checkOK(\"<a>{1}{2}</a>\")\n  checkOK(\"<a>{1}{2}<b/>{3}</a>\")\n  checkOK(\"<a>{<b>{1}{2}</b>}</a>\")"
  }
]