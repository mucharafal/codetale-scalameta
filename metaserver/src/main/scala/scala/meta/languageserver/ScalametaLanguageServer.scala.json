[
  {
    "id" : "c03a9ee6-5347-42ad-937c-b9409b77f1f1",
    "prId" : 158,
    "comments" : [
      {
        "id" : "664d0dd5-1b76-4032-89a7-78359b67e56b",
        "parentId" : null,
        "author" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "body" : "Why do we have connection here as well as lspIn and lspOut passed in?  I thought connection was just a wrapper around lspIn and lspOut.",
        "createdAt" : "2017-12-23T16:13:46Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b1a6bcc2-e4b7-4ccb-81cd-2a3af68a0510",
        "parentId" : "664d0dd5-1b76-4032-89a7-78359b67e56b",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "connection has higher level methods such as `showMessage`.\r\n\r\n`lspIn` and `lspOut` are just used to initialize it (via the `LanguageServer` constructor)",
        "createdAt" : "2017-12-23T16:15:27Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +97,101 @@    )\n  val (configurationSubscriber, configurationPublisher) =\n    ScalametaLanguageServer.configurationStream(connection)\n  val buffers: Buffers = Buffers()\n  val symbolIndex: SymbolIndex ="
  },
  {
    "id" : "710aeff4-465e-455b-85d3-704d41a0cd60",
    "prId" : 157,
    "comments" : [
      {
        "id" : "4f6aa5b5-c2cf-4248-8b85-89a1a7a6dfcf",
        "parentId" : null,
        "author" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "body" : "\\o/",
        "createdAt" : "2017-12-23T15:36:40Z",
        "updatedAt" : "2017-12-23T20:00:10Z",
        "lastEditedBy" : {
          "login" : "ShaneDelmore",
          "name" : "Shane Delmore",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "02644898b8f2599b71ec40803a680168214c8fd9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +293,297 @@      request: TextDocumentHoverRequest\n  ): Task[Hover] = Task {\n    HoverProvider.hover(\n      symbolIndex,\n      Uri(request.params.textDocument),"
  },
  {
    "id" : "ac1cb0e7-47d7-45d8-8cee-5d12f7d109dd",
    "prId" : 131,
    "comments" : [
      {
        "id" : "bdb82395-f931-4b66-b57d-835ea081bd97",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "if somebody knows a better way of recursively deleting a directory with Java NIO, please let me know!",
        "createdAt" : "2017-12-15T11:14:50Z",
        "updatedAt" : "2017-12-15T11:25:20Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2213f97f-1674-4073-b708-a42ce84dc8d6",
        "parentId" : "bdb82395-f931-4b66-b57d-835ea081bd97",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This is the best way to do it IMO :) It should be verbose!",
        "createdAt" : "2017-12-15T11:41:03Z",
        "updatedAt" : "2017-12-15T11:43:33Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "80db6c50-aaaa-4c4b-a159-e938f92b3c42",
        "parentId" : "bdb82395-f931-4b66-b57d-835ea081bd97",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "On a more serious note, this might merit inclusion in `org.langmeta.io.FileIO` where we have similar utils ",
        "createdAt" : "2017-12-15T11:41:41Z",
        "updatedAt" : "2017-12-15T11:43:33Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "867e5b2b0a081dfb481be2a14c9b7bffa47a2d98",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +348,352 @@  }\n\n  def clearCacheDirectory(): Unit =\n    Files.walkFileTree(\n      cacheDirectory.toNIO,"
  },
  {
    "id" : "0a30604f-036f-4f78-b835-da41e0cf1752",
    "prId" : 107,
    "comments" : [
      {
        "id" : "39959675-b3fc-4228-92df-63be00ceb491",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Did you remove this entirely because you think there's a better approach? Otherwise just commenting/removing the code that invokes this should be enough.",
        "createdAt" : "2017-12-10T09:28:32Z",
        "updatedAt" : "2017-12-10T09:30:13Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d5433766-5b66-42ed-bae9-aabd65655d2d",
        "parentId" : "39959675-b3fc-4228-92df-63be00ceb491",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I think There may be a better way to model this as a stream from the notifications, want to experiment with it today ",
        "createdAt" : "2017-12-10T10:23:24Z",
        "updatedAt" : "2017-12-10T10:23:24Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8686acbbbf95638d9c9514595fa166feb3b5e3ba",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +326,330 @@  private def onError(e: Throwable): Unit = {\n    logger.error(e.getMessage, e)\n  }\n}"
  },
  {
    "id" : "cdb15324-89e6-46c1-bef7-83bdea35e852",
    "prId" : 78,
    "comments" : [
      {
        "id" : "301fe27b-00b0-4a2e-b1be-822f820dab36",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "游꿀 ",
        "createdAt" : "2017-12-01T20:32:30Z",
        "updatedAt" : "2017-12-02T23:22:47Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "71da2fa975b8fb36cd888c23d0a8b0214a68e679",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +117,121 @@      ),\n      definitionProvider = true,\n      referencesProvider = true,\n      documentSymbolProvider = true,\n      documentFormattingProvider = true,"
  },
  {
    "id" : "51e5bcda-562d-4d50-99cf-8403343eefa1",
    "prId" : 34,
    "comments" : [
      {
        "id" : "a024d611-4d47-4a22-b5c1-047472cd8ae6",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What about `package a`?",
        "createdAt" : "2017-11-15T10:45:34Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8f3b7936-d0f2-40cf-aabb-e2ad410914a9",
        "parentId" : "a024d611-4d47-4a22-b5c1-047472cd8ae6",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "It falls into the `Member` case, so it will be just its `name` `a`. \r\nThis whole `qualifiedName` method is here **only** for the packages with `Select`, because their default `name` is just the last part and I think it's useful to see the full name in the outline.",
        "createdAt" : "2017-11-15T12:42:54Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "40011fb7-74a9-49a8-8bab-d333dfc41b2d",
        "parentId" : "a024d611-4d47-4a22-b5c1-047472cd8ae6",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I see, nice!",
        "createdAt" : "2017-11-15T21:04:34Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f22b970a071cd204e5269d09dea51d6223971e22",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +225,229 @@      case Term.Select(qual, name) =>\n        qualifiedName(qual).map { prefix => s\"${prefix}.${name}\" }\n      case Pkg(sel: Term.Select, _) =>\n        qualifiedName(sel)\n      case m: Member =>"
  },
  {
    "id" : "f1c864ee-e7e5-4e1d-96b3-46f617080173",
    "prId" : 34,
    "comments" : [
      {
        "id" : "7beedc9e-163a-4c36-955f-e72a8ec90d4d",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Glad you found this! Took me a while to learn about it :)",
        "createdAt" : "2017-11-15T10:45:49Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c42664cb-0e35-4c16-99aa-15dc40813fd0",
        "parentId" : "7beedc9e-163a-4c36-955f-e72a8ec90d4d",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "What do you mean? 游땐 ",
        "createdAt" : "2017-11-15T12:43:54Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8fff71d0-6648-452a-a00d-f49152042605",
        "parentId" : "7beedc9e-163a-4c36-955f-e72a8ec90d4d",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I wasn't aware of `Member` until quite recently, always found it frustrating to handle all val/val/def/class/trait/object cases",
        "createdAt" : "2017-11-15T21:04:24Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ee536a41-7992-469a-9aa5-326d1eddb871",
        "parentId" : "7beedc9e-163a-4c36-955f-e72a8ec90d4d",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Ah, yes, it's very helpful. I just searched for whatever with `name`, when I wanted to match it with symbols from the indexer 游땏 ",
        "createdAt" : "2017-11-15T21:31:22Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f22b970a071cd204e5269d09dea51d6223971e22",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +227,231 @@      case Pkg(sel: Term.Select, _) =>\n        qualifiedName(sel)\n      case m: Member =>\n        Some(m.name.value)\n      case _ => None"
  },
  {
    "id" : "00356db1-a675-4748-b089-863e81a3b9c6",
    "prId" : 34,
    "comments" : [
      {
        "id" : "5627f59d-7dca-487b-ba58-0e9817245e49",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "FYI `scala.meta.contrib._` adds a `.filter` on `Tree`",
        "createdAt" : "2017-11-15T21:08:20Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e47115d9-b974-49ef-968e-c4aea5fa3e44",
        "parentId" : "5627f59d-7dca-487b-ba58-0e9817245e49",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Thanks, I was looking for it but found after I wrote this and then forgot to change it.",
        "createdAt" : "2017-11-15T21:38:00Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f22b970a071cd204e5269d09dea51d6223971e22",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +236,240 @@    for {\n      tree <- contents.parse[Source].toOption.toList\n      node <- tree.collect {\n        case n if n.is[Member.Type] || n.is[Member.Term] => n\n      }"
  },
  {
    "id" : "44a9dd31-8660-46ea-9ff4-a980ae120e44",
    "prId" : 23,
    "comments" : [
      {
        "id" : "bdea3b8c-8917-4cb6-b7a3-c6fa89c1a8c9",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "should we also preload all existing `compilerconfig`files at launch, similarly to what we do with `semanticdb` files?",
        "createdAt" : "2017-11-14T09:21:37Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2c4df31d-39c8-4480-9237-160ccf605d7d",
        "parentId" : "bdea3b8c-8917-4cb6-b7a3-c6fa89c1a8c9",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "We do actually, since we call this method from loadAllSemanticdbs... method, I've renamed the method to be more descriptive.",
        "createdAt" : "2017-11-14T19:36:57Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f6d62081-a3a3-485a-93b6-e2eb7269063d",
        "parentId" : "bdea3b8c-8917-4cb6-b7a3-c6fa89c1a8c9",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "NB, we should really run that method asynchronously from the initialize method since it slows down server startup.",
        "createdAt" : "2017-11-14T19:37:27Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e644adff-858a-4a9b-b6cb-b606e5863435",
        "parentId" : "bdea3b8c-8917-4cb6-b7a3-c6fa89c1a8c9",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Yeah, in general I think initialize should return immediately and run the rest of the work asynchronously. We can even dynamically register for capabilities when the single services finish initializing.",
        "createdAt" : "2017-11-14T21:00:10Z",
        "updatedAt" : "2017-11-14T21:00:10Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +138,142 @@    name match {\n      case \"semanticdb\" => semanticdbSubscriber.onNext(path)\n      case \"compilerconfig\" => compilerConfigSubscriber.onNext(path)\n      case _ => fallback(path)\n    }"
  },
  {
    "id" : "6dafb82e-5838-44e2-a816-fde03393ab34",
    "prId" : 23,
    "comments" : [
      {
        "id" : "5aa4bd94-87c7-48d3-8a0f-acc7cf22c1f0",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "why is the overflow strategy gone?",
        "createdAt" : "2017-11-14T09:48:02Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5401df25-72f4-42d8-b073-4bf16aa859cd",
        "parentId" : "5aa4bd94-87c7-48d3-8a0f-acc7cf22c1f0",
        "author" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I added it without knowing what it does. I think we should use the default unless we know what we're doing.",
        "createdAt" : "2017-11-14T19:34:18Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "칍lafur P치ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +48,52 @@    ScalametaLanguageServer.semanticdbStream\n  val (compilerConfigSubscriber, compilerConfigPublisher) =\n    Observable.multicast[AbsolutePath](MulticastStrategy.Publish)\n  def onError(e: Throwable): Unit = {\n    logger.error(e.getMessage, e)"
  },
  {
    "id" : "866c7866-1ae2-4615-8533-309a7f51a169",
    "prId" : 21,
    "comments" : [
      {
        "id" : "e104d414-76a1-4c46-a7bf-d4a731f4caa4",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Is it 100% sure that `tpeName` is never empty? 游땏 ",
        "createdAt" : "2017-11-10T15:03:40Z",
        "updatedAt" : "2017-11-10T15:03:40Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c3a15250-62fa-4385-b416-b100fe740f4e",
        "parentId" : "e104d414-76a1-4c46-a7bf-d4a731f4caa4",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I tried hovering on everything and it never showed empty boxes 游눆 \r\n\r\nOf course I may be wrong ^^",
        "createdAt" : "2017-11-10T15:05:06Z",
        "updatedAt" : "2017-11-10T15:05:06Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "26b9a7a5-6ea1-46c5-b1ab-5ed009da58b5",
        "parentId" : "e104d414-76a1-4c46-a7bf-d4a731f4caa4",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I would still add a check here, if it's not an a priori known fact that `tpeName` cannot be empty.\r\n\r\nAnother question here: why did you remove the range parameter?",
        "createdAt" : "2017-11-10T15:07:31Z",
        "updatedAt" : "2017-11-10T15:07:31Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fde3fc97-2a2e-4fa1-85c4-6105f8318979",
        "parentId" : "e104d414-76a1-4c46-a7bf-d4a731f4caa4",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I didn't find an easy way to retrieve that from the PC. I admit I didn't look hard for it, because vscode seems to handle it pretty well even without it.",
        "createdAt" : "2017-11-10T15:09:01Z",
        "updatedAt" : "2017-11-10T15:09:16Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7fb47065-8e68-43f9-a94b-cae70ec65d00",
        "parentId" : "e104d414-76a1-4c46-a7bf-d4a731f4caa4",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "As per the check, it'd be weird that `tree.tpe.widen` would return an empty string. I suppose if it ever comes up we can handle it pretty easily :)",
        "createdAt" : "2017-11-10T15:10:46Z",
        "updatedAt" : "2017-11-10T15:10:46Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d6e5d3cc-75d3-41b3-a3fc-c328ec1cad21",
        "parentId" : "e104d414-76a1-4c46-a7bf-d4a731f4caa4",
        "author" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Works great! 游눮 So cool!\r\nAnd yes, I thought that without range symbols won't be highlighted correctly, but both VS Code and Atom handle it very well.",
        "createdAt" : "2017-11-10T15:36:46Z",
        "updatedAt" : "2017-11-10T15:36:46Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : "Alexey Alekhin",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "122ec665a5096b2c5408dc9d9320eac87adb0549",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +252,256 @@    compiler.typeAt(path, position.line, position.character) match {\n      case None => Hover(Nil, None)\n      case Some(tpeName) =>\n        Hover(\n          contents = List("
  }
]