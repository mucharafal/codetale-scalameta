[
  {
    "id" : "9931a44d-3726-40d1-915b-3f20ed0e9a23",
    "prId" : 1846,
    "comments" : [
      {
        "id" : "9441c156-93c6-43a8-bf48-b1f2cc673df6",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ah, good call adding this in 👍 ",
        "createdAt" : "2020-06-19T19:58:10Z",
        "updatedAt" : "2020-06-21T18:57:33Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "10223975ce00488d39a58765d57e434b217aeb21",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +35,39 @@  private val worksheetPick =\n    MetalsQuickPickItem(id = \"worksheet\", label = \"Worksheet\")\n  private val ammonitePick =\n    MetalsQuickPickItem(id = \"ammonite\", label = \"Ammonite script\")\n"
  },
  {
    "id" : "55cf24c5-59a3-4bc5-bb06-12350b4b225e",
    "prId" : 1528,
    "comments" : [
      {
        "id" : "ca73029d-6084-4a30-920d-c504aafd03a6",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I've changed this to also accept a `name`, so that we can skip the name-picking dialog and just ask for a file kind.\r\n\r\nThis allows the code action to fully re-use the existing provider's flow, which I think is really nice",
        "createdAt" : "2020-03-23T10:23:00Z",
        "updatedAt" : "2020-03-23T15:05:32Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "29e8820c0560d7d7e678b124344d3884ba5c2bda",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +35,39 @@  def createNewFileDialog(\n      directoryUri: Option[URI],\n      name: Option[String]\n  ): Future[Unit] = {\n    val directory = directoryUri"
  },
  {
    "id" : "a32723fe-4a33-4b3e-bc66-d66a69dee9e8",
    "prId" : 1528,
    "comments" : [
      {
        "id" : "96165bf5-9329-491b-8f93-58d16fd24695",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "My editor is set to strip out whitespaces on save, so I've been struggling with this.\r\n\r\nI think it's much clearer this way, anyway.",
        "createdAt" : "2020-03-23T11:41:18Z",
        "updatedAt" : "2020-03-23T15:05:32Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "263cc379-6b00-4de1-9863-3c0fa4f5aeb1",
        "parentId" : "96165bf5-9329-491b-8f93-58d16fd24695",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I agree this is clearer. I also have my editor remove trailing whitespace on save, intellij has this enabled by default, so we should not rely on it in our tests",
        "createdAt" : "2020-03-23T12:23:16Z",
        "updatedAt" : "2020-03-23T15:05:32Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bd2716dd-127f-4dc5-8af0-62ef4f38983d",
        "parentId" : "96165bf5-9329-491b-8f93-58d16fd24695",
        "author" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I also like this as I get a warning in vim about trailing whitespaces all the time ha.",
        "createdAt" : "2020-03-23T12:30:24Z",
        "updatedAt" : "2020-03-23T15:05:32Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "29e8820c0560d7d7e678b124344d3884ba5c2bda",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +199,203 @@    val indent = \"  \"\n    s\"\"\"|$kind $name {\n        |$indent\n        |}\n        |\"\"\".stripMargin"
  },
  {
    "id" : "a595efe5-f67f-48d3-bfef-89bae24cef80",
    "prId" : 1447,
    "comments" : [
      {
        "id" : "3054168a-226d-4e54-baf4-36d0e2d7f8a0",
        "parentId" : null,
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : "Aleksei Alefirov",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "I've made some kind of DSL here, to cover `Future[Option[_]]` handling (making this method more or readable). `Future` is for about remote requests, and `Option` reflect that the request can be cancelled (thus, nothing should be returned eventually).\r\nNot sure, if it's good here.",
        "createdAt" : "2020-02-17T19:04:26Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : "Aleksei Alefirov",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "948961c16a2b407e9b6be832f69458537ee4bc93",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +37,41 @@\n    val newlyCreatedFile =\n      askForKind\n        .flatMapOption {\n          case kind @ (classPick.id | objectPick.id | traitPick.id) =>"
  },
  {
    "id" : "486b107d-f07a-4c8c-ab81-78f3ca27d901",
    "prId" : 1447,
    "comments" : [
      {
        "id" : "17d9a913-4448-4691-b279-51630dc7a6e1",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "What happens if the name is `a/b/c/A` - I think we should create the directories there. Most likely `createFile` should also create directories? Package will then be added automatically which is neat.",
        "createdAt" : "2020-02-19T18:36:55Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2e7fc917-dffd-48f3-9022-258f07b93be6",
        "parentId" : "17d9a913-4448-4691-b279-51630dc7a6e1",
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : "Aleksei Alefirov",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "it fails. Not really sure, it looks neat to ask for the name for the new class `foo/Bar` to create `class Bar`at `foo/Bar.scala`",
        "createdAt" : "2020-02-20T15:41:14Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : "Aleksei Alefirov",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0d32ba33-04be-4f29-a75c-7ab43be1c258",
        "parentId" : "17d9a913-4448-4691-b279-51630dc7a6e1",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Could we implement it here? I think we just need to do `getParent.mkdirs`",
        "createdAt" : "2020-02-21T13:09:48Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "948961c16a2b407e9b6be832f69458537ee4bc93",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +100,104 @@      kind: String\n  ): Future[AbsolutePath] = {\n    val path = directory.getOrElse(workspace).resolve(name + \".scala\")\n    //name can be actually be \"foo/Name\", where \"foo\" is a folder to create\n    val className = directory.getOrElse(workspace).resolve(name).filename"
  }
]