[
  {
    "id" : "b5bbb87f-a275-4868-923a-9d8fbc966d90",
    "prId" : 1989,
    "comments" : [
      {
        "id" : "39bfa513-5c24-4c68-8c59-3f6c6dc85a8d",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This was not actually used anywhere. `sourceItemsToBuildTarget` is used for the same exact purpose.",
        "createdAt" : "2020-08-12T16:47:35Z",
        "updatedAt" : "2020-08-12T16:47:36Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6f07f0ec0ac3ad34663a0090bdbf6feb85a07326",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +53,57 @@    TrieMap.empty[AbsolutePath, BuildTargetIdentifier]\n  private val isSourceRoot =\n    ConcurrentHashSet.empty[AbsolutePath]\n  // if workspace contains symlinks, original source items are kept here and source items dealiased\n  private val originalSourceItems = ConcurrentHashSet.empty[AbsolutePath]"
  },
  {
    "id" : "245c40ee-b716-4b76-a4db-5c2fc37f0d76",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "6f7df8a2-25d0-4e2b-b78c-844783e553e9",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Do we return the right sbt target for the Scala files located in `project` directories? I think if Bloop doesn't provide use with proper source roots we could add a custom logic for resolving target by source file in `inverseSources`. If no build target is found we can look if this file should belong to an sbt build target. What do you think?",
        "createdAt" : "2020-07-27T13:01:46Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "70111fb9-cd39-46bc-941d-f23a3af9385f",
        "parentId" : "6f7df8a2-25d0-4e2b-b78c-844783e553e9",
        "author" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "body" : "This method is only for `.*sbt` files.\r\nFor `*.scala` files from meta build `inverseSources` is used as usual.\r\n\r\nI think when we start implementing compilation for `.*sbt` files it would be better to move this logic into `inverseSources` method. But for now, I'm not sure if there is a need for that.\r\n",
        "createdAt" : "2020-07-27T17:24:04Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +246,250 @@   *   because `*.sbt` aren't included in `sourceFiles` set\n   */\n  def sbtBuildScalaTarget(file: AbsolutePath): Option[ScalaTarget] = {\n    val targetMetaBuildDir = file.parent.resolve(\"project\")\n    buildTargetInfo.values"
  },
  {
    "id" : "250783c0-6b37-40ad-bd43-645d940d9281",
    "prId" : 1781,
    "comments" : [
      {
        "id" : "155984a0-e60f-4286-9d50-4118282fee2e",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "So I _think_ I understand what is going on here, but why when used up above do we so a `sortBy` and below we use `max`?. Also, what's the benefit of using binary shift operators here? I've actually never came across these in the wild before ðŸ˜¬ ",
        "createdAt" : "2020-05-27T12:05:48Z",
        "updatedAt" : "2020-05-27T12:07:41Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "75b090de-78f3-4001-9a38-fdc0daf88bc1",
        "parentId" : "155984a0-e60f-4286-9d50-4118282fee2e",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We are using maxBy in a scenario that we know the list is not empty and it produces a single element. `sortBy` still produces a list, which is useful in the other scenario.\r\n\r\nBinary shift is I think just an easy way to introduce priority.",
        "createdAt" : "2020-05-27T12:16:58Z",
        "updatedAt" : "2020-05-27T12:16:58Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b670b3ef-689f-4095-a0ef-b8931cf473bf",
        "parentId" : "155984a0-e60f-4286-9d50-4118282fee2e",
        "author" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Sounds good. Thanks for explaining.",
        "createdAt" : "2020-05-27T12:29:11Z",
        "updatedAt" : "2020-05-27T12:29:11Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "376535f14d761d5513fd67b015e9ab10588f0ac7",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +72,76 @@\n      score\n  }\n\n  def setTables(newTables: Tables): Unit = {"
  },
  {
    "id" : "c68bdf51-2d18-4bff-b0cb-8eb196f94896",
    "prId" : 1145,
    "comments" : [
      {
        "id" : "b2ac7bfd-90ed-473a-b601-cf50a3cac98a",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "`.toOption`?",
        "createdAt" : "2019-12-04T17:28:38Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6da5aef4-968b-4dd3-875e-9466778de770",
        "parentId" : "b2ac7bfd-90ed-473a-b601-cf50a3cac98a",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This code is unchanged from before, it just moved. I think `toOption.flatten` is a valid refactoring but it's unrelated to this PR.",
        "createdAt" : "2019-12-05T10:26:24Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c032fa899f1747d53cf2025b6e1cf03227b19980",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +254,258 @@  ): Option[BuildTargetIdentifier] = {\n    if (source.isDependencySource(workspace)) {\n      Try(unsafeInferBuildTarget(source)).getOrElse(None)\n    } else {\n      val fromInference ="
  },
  {
    "id" : "6b73e24c-4da4-4a2b-8993-55dd33b6f70b",
    "prId" : 1145,
    "comments" : [
      {
        "id" : "c08947bb-6756-4698-8c34-2b95c31755b4",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Same for buildTargetReference?",
        "createdAt" : "2019-12-04T18:27:21Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fc166802-80d8-43d0-adb9-c790cfeb3b0b",
        "parentId" : "c08947bb-6756-4698-8c34-2b95c31755b4",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Nice catch! Fixed.",
        "createdAt" : "2019-12-05T11:14:08Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c032fa899f1747d53cf2025b6e1cf03227b19980",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +62,66 @@    buildTargetSources.clear()\n    inverseDependencySources.clear()\n    isSourceRoot.clear()\n    buildTargetInference.clear()\n  }"
  },
  {
    "id" : "c9e54b21-4fd6-41d9-8634-8f76c0bed58d",
    "prId" : 948,
    "comments" : [
      {
        "id" : "229deaf7-85ba-405e-8f43-27e3167d78cc",
        "parentId" : null,
        "author" : {
          "login" : "jvican",
          "name" : "Jorge",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "body" : "NiceðŸ‘Œ",
        "createdAt" : "2019-09-27T10:31:57Z",
        "updatedAt" : "2019-09-27T10:32:40Z",
        "lastEditedBy" : {
          "login" : "jvican",
          "name" : "Jorge",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "468f3ce838bfa1ab613b941981f8aefa06619232",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +205,209 @@          t => ScalaVersions.isSupportedScalaVersion(t.getScalaVersion())\n        )\n        if (isSupportedScalaVersion) score <<= 2\n\n        val isJVM = scalacOptions(t).exists(_.isJVM)"
  },
  {
    "id" : "6ae0fed9-a134-426b-817d-5a14bfd750a8",
    "prId" : 857,
    "comments" : [
      {
        "id" : "d179ed1a-597c-42c3-aff0-792f2762f7be",
        "parentId" : null,
        "author" : {
          "login" : "mzarnowski",
          "name" : "Marek Å»arnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "body" : "I was thinking about renaming the `sourceItems` to just `sources` whenever we find it ;)",
        "createdAt" : "2019-08-08T06:15:50Z",
        "updatedAt" : "2019-08-08T16:25:02Z",
        "lastEditedBy" : {
          "login" : "mzarnowski",
          "name" : "Marek Å»arnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0dd3eede29c603619dd79001b736615bb5743729",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@  }\n  private var tables: Option[Tables] = None\n  private val sourceItemsToBuildTarget =\n    TrieMap.empty[AbsolutePath, ConcurrentLinkedQueue[BuildTargetIdentifier]]\n  private val buildTargetInfo ="
  }
]