[
  {
    "id" : "ae094762-4c43-4774-82c4-3a85a9e63ae7",
    "prId" : 1523,
    "comments" : [
      {
        "id" : "f33a6688-a758-45f3-85db-3c6ca7373f70",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ignorant question. This is just because Scala3 produces semanticdb, and therefore are checking for this rather than the plugin right?",
        "createdAt" : "2020-04-04T08:48:59Z",
        "updatedAt" : "2020-04-15T13:50:25Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "17401e2a-9206-4a41-9775-b3ff0fa4d0e8",
        "parentId" : "f33a6688-a758-45f3-85db-3c6ca7373f70",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Yes, we don't need to check for the plugin, since we don't need one.",
        "createdAt" : "2020-04-04T09:55:10Z",
        "updatedAt" : "2020-04-15T13:50:25Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1142490703f832961ac0df1debd14b4f3b12ce7d",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +483,487 @@    def isSemanticdbEnabled(scalaVersion: String): Boolean = {\n      if (ScalaVersions.isScala3Version(scalaVersion)) {\n        item.getOptions.asScala.exists { opt => opt == \"-Ysemanticdb\" }\n      } else {\n        item.getOptions.asScala.exists { opt =>"
  },
  {
    "id" : "51b1a711-7ae1-401e-8772-3d0f819e43d6",
    "prId" : 1155,
    "comments" : [
      {
        "id" : "8ca6f552-44f3-454e-88c9-7bc14d40d221",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "So there is still a risk we will have a non-atomic operation? Shouldn't we retry the atomic move again or resign altogether.",
        "createdAt" : "2019-12-05T20:41:02Z",
        "updatedAt" : "2019-12-05T20:41:11Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7cd78914-011b-499d-82c2-d0f2e85af0ad",
        "parentId" : "8ca6f552-44f3-454e-88c9-7bc14d40d221",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Some file systems donâ€™t support atomic moves so the best we can do is fall back to a normal move. ",
        "createdAt" : "2019-12-05T20:59:11Z",
        "updatedAt" : "2019-12-05T20:59:11Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "493cc88a-223a-49bf-80eb-96861154e62b",
        "parentId" : "8ca6f552-44f3-454e-88c9-7bc14d40d221",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Could there be a more specific exception to catch here?",
        "createdAt" : "2019-12-05T21:00:23Z",
        "updatedAt" : "2019-12-05T21:00:23Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "11d8de08-4b7d-45d9-bd0e-a3c5936b33eb",
        "parentId" : "8ca6f552-44f3-454e-88c9-7bc14d40d221",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The docs don't specify what exception will be thrown so I didn't want to be too specific. ",
        "createdAt" : "2019-12-06T13:36:25Z",
        "updatedAt" : "2019-12-06T13:36:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b68fb8c5f762e67fc61452fc9363fd1cebf0ac19",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +365,369 @@      } catch {\n        case NonFatal(_) =>\n          Files.move(tmp, path.toNIO, StandardCopyOption.REPLACE_EXISTING)\n      }\n    }"
  },
  {
    "id" : "ba3a117c-ad8d-41df-a7b5-9f8a478b6f21",
    "prId" : 1145,
    "comments" : [
      {
        "id" : "36cdacc8-c00d-4143-aa46-f4d16d07de3e",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "lol",
        "createdAt" : "2019-12-04T16:57:27Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c032fa899f1747d53cf2025b6e1cf03227b19980",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +242,246 @@\n    /**\n     * Resolve each path segment individually to prevent FileSystem mismatch errors.\n     */\n    def resolveZipPath(zipPath: Path): AbsolutePath = {"
  },
  {
    "id" : "d942fb1c-83d0-47b5-8a4c-7aff6e30a88b",
    "prId" : 1057,
    "comments" : [
      {
        "id" : "a5ac2e09-63cd-464f-b4b8-8f46c8ae741a",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "ðŸ™ˆ ",
        "createdAt" : "2019-11-11T04:03:20Z",
        "updatedAt" : "2019-11-11T14:41:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "75c0df02-0091-4ce9-8277-801049067fdf",
        "parentId" : "a5ac2e09-63cd-464f-b4b8-8f46c8ae741a",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Wish this was easier to write...",
        "createdAt" : "2019-11-11T04:03:29Z",
        "updatedAt" : "2019-11-11T14:41:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0e3854eb-f2d8-4b1c-b4ce-e957b55073fe",
        "parentId" : "a5ac2e09-63cd-464f-b4b8-8f46c8ae741a",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```scala\r\ntry initializeParams.getCapabilities.getTextDocument.getCompletion.getCompletionItem.getSnippetSupport.booleanValue\r\ncatch { case _: NPE => false }\r\n```\r\n ðŸ˜… ",
        "createdAt" : "2019-11-11T04:04:34Z",
        "updatedAt" : "2019-11-11T14:41:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "23f80783-0fcd-42ff-9315-23ad6c5029fa",
        "parentId" : "a5ac2e09-63cd-464f-b4b8-8f46c8ae741a",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "poor man's monad :P ",
        "createdAt" : "2019-11-11T14:20:14Z",
        "updatedAt" : "2019-11-11T14:41:31Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "03c3f686dd1789f90cd4b4dd18b979160753abb7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +510,514 @@      } yield hierarchicalDocumentSymbolSupport.booleanValue).getOrElse(false)\n\n    def supportsCompletionSnippets: Boolean =\n      (for {\n        params <- initializeParams"
  },
  {
    "id" : "2febf293-a0ac-46c4-b52b-dd1a099fc50c",
    "prId" : 1048,
    "comments" : [
      {
        "id" : "57ed81a2-bbf6-448b-bb20-f8fe5fafbe18",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "`path.startsWith(workspace)` should strictly speaking be a condition as well",
        "createdAt" : "2019-11-11T13:50:07Z",
        "updatedAt" : "2019-11-11T16:33:17Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b0697f0a-618a-455a-8776-3602c3055212",
        "parentId" : "57ed81a2-bbf6-448b-bb20-f8fe5fafbe18",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added! ",
        "createdAt" : "2019-11-11T16:33:44Z",
        "updatedAt" : "2019-11-11T16:33:44Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "32617da1c138d4dd74af7289c14ff3aeb1bc9654",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +254,258 @@        isInReadonlyDirectory(workspace)\n\n    def isWorkspaceSource(workspace: AbsolutePath): Boolean =\n      isLocalFileSystem(workspace) &&\n        !isInReadonlyDirectory(workspace) &&"
  },
  {
    "id" : "7366b10d-c45d-490e-a1b7-acd8005dacb5",
    "prId" : 632,
    "comments" : [
      {
        "id" : "ae057ed4-d038-421b-843c-58006a0d170e",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "\\o/",
        "createdAt" : "2019-04-10T08:53:10Z",
        "updatedAt" : "2019-04-10T09:48:55Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ã“lafur PÃ¡ll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "79793f51fa23f5e83e6e9dc8e633ae708eeb17a1",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +502,506 @@  }\n\n  implicit class XtensionTreeTokenStream(tree: Tree) {\n    def leadingTokens: Iterator[Token] = tree.origin match {\n      case Origin.Parsed(input, _, pos) =>"
  }
]