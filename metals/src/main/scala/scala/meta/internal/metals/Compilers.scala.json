[
  {
    "id" : "749c3b73-fdaf-4b1a-ac3b-07cb993054f9",
    "prId" : 1856,
    "comments" : [
      {
        "id" : "3423d275-a957-4a2e-84ef-7ba230b6b8e3",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This code path didn't exist before, why is that? Would it be possible to somehow move the management of compilers to `Compilers.scala`? There seems to be some overlap, maybe we can generate `BuildTargetIdentifier` for worksheets?",
        "createdAt" : "2020-06-25T17:17:02Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d339236d-c0b5-46b6-8194-d29955b2a797",
        "parentId" : "3423d275-a957-4a2e-84ef-7ba230b6b8e3",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Not sure what you mean? It's invoked after evaluating the worksheet in case of changed dependencies, which in essence is a build target change. I am not sure how otherwise to trigger on that particular event. \r\n\r\nAlternatively, we could have worksheets as a different target and update the build target if dependencies change, which will be effectively the same with more indirection. We do need to somehow restart the presentation compiler.\r\n\r\n> There seems to be some overlap, maybe we can generate BuildTargetIdentifier for worksheets?\r\n\r\nI was thinking about having a separate build target for each worksheet, but since the worksheets can be a part of another build target I decided against. It also seemed like it might cause more work really and I planned to have this for the release tomorrow.\r\n",
        "createdAt" : "2020-06-25T18:47:36Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d858e1f7-ed70-44b1-bb03-5bac0c70f8fb",
        "parentId" : "3423d275-a957-4a2e-84ef-7ba230b6b8e3",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Sounds good. I agree with your conclusion to keep this as is ",
        "createdAt" : "2020-06-26T09:02:33Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f17edfb786b6f5af2def3bdb1d0b49714512fb2",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +380,384 @@      _ = {\n        if (!isSupported) {\n          scribe.warn(s\"unsupported Scala ${info.scalaVersion}\")\n        }\n      }"
  },
  {
    "id" : "398967c3-310d-418e-9199-c80d12111465",
    "prId" : 1856,
    "comments" : [
      {
        "id" : "3a6272c3-6026-4bcb-8904-a8d5ac19e662",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "why are you updating `jworksheetsCache` twice?",
        "createdAt" : "2020-06-25T21:48:54Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "499a6051-d34c-478b-a1ae-418d7286ded1",
        "parentId" : "3a6272c3-6026-4bcb-8904-a8d5ac19e662",
        "author" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "okay this is actually foreach if not present :D scala should add method like forempty {} :P",
        "createdAt" : "2020-06-25T22:01:34Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e47607dd-8dd4-46fc-9e62-ee37f9faf963",
        "parentId" : "3a6272c3-6026-4bcb-8904-a8d5ac19e662",
        "author" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "< resolved >",
        "createdAt" : "2020-06-25T22:01:44Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f17edfb786b6f5af2def3bdb1d0b49714512fb2",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +404,408 @@\n    created.getOrElse {\n      jworksheetsCache.put(\n        path,\n        createStandaloneCompiler(classpath, path.toString())"
  },
  {
    "id" : "83126611-fb62-4196-995d-ea7aef49fc0d",
    "prId" : 1856,
    "comments" : [
      {
        "id" : "6be951a7-3dfe-47a6-8ad8-4c1b65f77ed8",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "put returns previous value, `created` ends up being:\r\n```\r\nscala> val created = for {\r\n     |   x <- Option(3)\r\n     | } yield {\r\n     |   null\r\n     | }\r\nval created: Option[Null] = Some(null)\r\n```",
        "createdAt" : "2020-06-25T21:55:23Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "21acb125-84de-49b2-bcbd-dea3ce54bc5d",
        "parentId" : "6be951a7-3dfe-47a6-8ad8-4c1b65f77ed8",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added `()`, but this should not be an issue anyway, since that value is never used.",
        "createdAt" : "2020-06-26T12:59:28Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "aeb80532-fde9-470c-8732-851f952dff6c",
        "parentId" : "6be951a7-3dfe-47a6-8ad8-4c1b65f77ed8",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Changed to explicit: Option[Unit], which looks better. ",
        "createdAt" : "2020-06-26T14:32:42Z",
        "updatedAt" : "2020-06-26T14:32:42Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f17edfb786b6f5af2def3bdb1d0b49714512fb2",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +386,390 @@      scalac <- buildTargets.scalacOptions(targetId)\n    } yield {\n      jworksheetsCache.put(\n        path,\n        statusBar.trackBlockingTask("
  },
  {
    "id" : "39dadabc-4a3c-44d1-ac73-7f3bf3f38160",
    "prId" : 1523,
    "comments" : [
      {
        "id" : "4af85e7c-e801-4f6f-94ed-8b4a3c6c89c5",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Moved the configuration for `foldOnlyLines` here",
        "createdAt" : "2020-04-15T13:41:36Z",
        "updatedAt" : "2020-04-15T13:50:25Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1142490703f832961ac0df1debd14b4f3b12ce7d",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +362,366 @@          isCompletionSnippetsEnabled =\n            initializeParams.supportsCompletionSnippets,\n          isFoldOnlyLines = initializeParams.foldOnlyLines\n        )\n      )"
  },
  {
    "id" : "6afd835b-524d-4eb3-ae9d-939a9f02fe8c",
    "prId" : 736,
    "comments" : [
      {
        "id" : "3929dcd2-4089-4017-8d5d-d5ef970fd2f3",
        "parentId" : null,
        "author" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "body" : "Can we not mix the future/options? Other methods here have option/future. Is there a reason for breaking this consistency?",
        "createdAt" : "2019-05-29T13:24:31Z",
        "updatedAt" : "2019-06-01T12:08:36Z",
        "lastEditedBy" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2d90b245-7356-4e5b-a372-23a134bcb5f5",
        "parentId" : "3929dcd2-4089-4017-8d5d-d5ef970fd2f3",
        "author" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "body" : "Or as @tgodzik suggested - the other way around :)",
        "createdAt" : "2019-05-29T15:17:19Z",
        "updatedAt" : "2019-06-01T12:08:36Z",
        "lastEditedBy" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ff3f90df-987e-4e4f-aeee-5ee176e0e305",
        "parentId" : "3929dcd2-4089-4017-8d5d-d5ef970fd2f3",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I have changed all the signatures to return `Future[T]` for consistency, I agree this makes the code easier to reason about.",
        "createdAt" : "2019-05-31T09:05:43Z",
        "updatedAt" : "2019-06-01T12:08:36Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3cd39a3dc1957ac5b5e4e60da9c3eae356702ace",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +155,159 @@      token: CancelToken,\n      interactiveSemanticdbs: InteractiveSemanticdbs\n  ): Future[Option[Hover]] =\n    withPC(params, Some(interactiveSemanticdbs)) { (pc, pos) =>\n      pc.hover("
  },
  {
    "id" : "82258155-4b86-42ff-ae9c-11f1d784a120",
    "prId" : 527,
    "comments" : [
      {
        "id" : "58470741-6031-4844-9a98-9c8874148072",
        "parentId" : null,
        "author" : {
          "login" : "nremond",
          "name" : "Nicolas Rémond",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/600102?v=4"
        },
        "body" : "But why a synchronized version vs `java.util.concurrent.ConcurrentHashMap`?",
        "createdAt" : "2019-02-20T23:19:24Z",
        "updatedAt" : "2019-03-10T09:44:08Z",
        "lastEditedBy" : {
          "login" : "nremond",
          "name" : "Nicolas Rémond",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/600102?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5fc208db-0dd3-4dde-b9c5-bdddc5a52207",
        "parentId" : "58470741-6031-4844-9a98-9c8874148072",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "`j.u.c.ConcurrentHashMap` can deadlock in `computeIfAbsent` when the compute function is expensive",
        "createdAt" : "2019-02-21T08:53:30Z",
        "updatedAt" : "2019-03-10T09:44:08Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c7621ebcf6232d37856b167824069496131bae13",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@  // Not a `j.u.c.ConcurrentHashMap` because it can deadlock in `computeIfAbsent` when the absent\n  // function is expensive, which is the case here.\n  val jcache = Collections.synchronizedMap(\n    new java.util.HashMap[BuildTargetIdentifier, PresentationCompiler]\n  )"
  }
]