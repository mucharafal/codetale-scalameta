[
  {
    "id" : "68ddb67e-887c-42f7-b90f-6f383d7d3edb",
    "prId" : 1538,
    "comments" : [
      {
        "id" : "6311bf52-6bf2-4adc-b2ad-a2547e92df4c",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This will be used in another PR, so best to keep a list here.",
        "createdAt" : "2020-03-31T16:55:14Z",
        "updatedAt" : "2020-05-21T11:17:43Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "443fec1d-cd07-4891-89cb-b585417fcc13",
        "parentId" : "6311bf52-6bf2-4adc-b2ad-a2547e92df4c",
        "author" : {
          "login" : "alexarchambault",
          "name" : "Alexandre Archambault",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/7063723?u=d5befca0ebfec0042dad7ef93973490eef750ff4&v=4"
        },
        "body" : "Just a bit of context about these changes.\r\n\r\nThe changes in this file mostly originate from https://github.com/scalameta/metals/commit/f621af1dc. One of the goals of https://github.com/scalameta/metals/commit/f621af1dc is to have `Compilations` be fine with several `BuildServerConnection`s.\r\n\r\nPreviously, when `compileTargets` or `compileFiles` were called, all compilation requests went through the same `BuildServerConnection`, returning a single `b.CompileResult` via a single `buildTarget/compile` call. So `compileFiles` and `compileTargets` could return a single `b.CompileResult`.\r\n\r\nNow, there can be up to one request per `BuildServerConnection`, so we may be handed several `b.CompileResult`.\r\n\r\nIt seemed not straightforward to make `b.CompileResult`s additive to fold them together (correct me if you think otherwise), so I went another route.\r\n\r\nI constrained the `Compilation` API (making `compileTargets` and `compileFiles` accept a single target, and / or return a `Future[Unit]` rather than a `Future[b.CompileResult]`), to allow to keep returning a single `b.CompileResult` in most cases (and `Unit` in the only remaining method accepting several files).\r\n\r\nAlternatively, we could constrain less those methods, but make them return a `Future[Map[BuildTargetIdentifier, b.CompileResult]]` instead. And users would have to pick the `b.CompileResult` they're interested in in the map.",
        "createdAt" : "2020-04-02T20:08:01Z",
        "updatedAt" : "2020-05-21T11:17:44Z",
        "lastEditedBy" : {
          "login" : "alexarchambault",
          "name" : "Alexandre Archambault",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/7063723?u=d5befca0ebfec0042dad7ef93973490eef750ff4&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0681fa0b1417b7ac622101d279667c6900a2506e",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +40,44 @@  def currentlyCompiling: Iterable[b.BuildTargetIdentifier] = isCompiling.keys\n  def isCurrentlyCompiling(buildTarget: b.BuildTargetIdentifier): Boolean =\n    isCompiling.contains(buildTarget)\n\n  def previouslyCompiled: Iterable[b.BuildTargetIdentifier] = lastCompile"
  },
  {
    "id" : "c9f582ec-b6fe-4078-9cfa-d0d80a344634",
    "prId" : 1538,
    "comments" : [
      {
        "id" : "2d54fee2-f996-4a92-9709-6e51a379b25e",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Why the change? I think it's better to keep the result rather than just return unit.",
        "createdAt" : "2020-03-31T16:57:04Z",
        "updatedAt" : "2020-05-21T11:17:43Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f8d66c94-63a8-4805-a42f-59cb33370f21",
        "parentId" : "2d54fee2-f996-4a92-9709-6e51a379b25e",
        "author" : {
          "login" : "alexarchambault",
          "name" : "Alexandre Archambault",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/7063723?u=d5befca0ebfec0042dad7ef93973490eef750ff4&v=4"
        },
        "body" : "See my comment above.",
        "createdAt" : "2020-04-02T20:08:20Z",
        "updatedAt" : "2020-05-21T11:17:44Z",
        "lastEditedBy" : {
          "login" : "alexarchambault",
          "name" : "Alexandre Archambault",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/7063723?u=d5befca0ebfec0042dad7ef93973490eef750ff4&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0681fa0b1417b7ac622101d279667c6900a2506e",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +75,79 @@  }\n\n  def compileFiles(paths: Seq[AbsolutePath]): Future[Unit] = {\n    val targets = expand(paths)\n    for {"
  }
]