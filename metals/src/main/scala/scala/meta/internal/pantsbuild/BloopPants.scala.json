[
  {
    "id" : "352eba82-2938-4b93-b49f-3e4fd73a46c6",
    "prId" : 1352,
    "comments" : [
      {
        "id" : "1bb65fb5-100c-4404-a843-1a195f32c64b",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Can you please configure IntelliJ to \r\n\r\n* sort everything alphabetically\r\n* don't group prefix with `import a.{b,c}`",
        "createdAt" : "2020-01-25T16:55:54Z",
        "updatedAt" : "2020-01-28T02:16:30Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "671b434a-726f-4d27-bfcc-707273dedcb3",
        "parentId" : "1bb65fb5-100c-4404-a843-1a195f32c64b",
        "author" : {
          "login" : "wiwa",
          "name" : "Win Wang",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1862202?u=67d3c93419e4dd2a110dc2135e1b5ebaf98919c2&v=4"
        },
        "body" : "Done.",
        "createdAt" : "2020-01-27T16:42:32Z",
        "updatedAt" : "2020-01-28T02:16:30Z",
        "lastEditedBy" : {
          "login" : "wiwa",
          "name" : "Win Wang",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1862202?u=67d3c93419e4dd2a110dc2135e1b5ebaf98919c2&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "be7a84552b77893b7f348eeb8d622c35ad102402",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +2,6 @@\nimport bloop.config.{Config => C}\nimport ch.epfl.scala.bsp4j.BuildTargetIdentifier\nimport coursierapi.Dependency\nimport coursierapi.MavenRepository"
  },
  {
    "id" : "43b92e33-fb09-4a8f-8900-a166d28ba5f1",
    "prId" : 1181,
    "comments" : [
      {
        "id" : "91af5d8d-1a4c-4566-91a8-3c9539356e8f",
        "parentId" : null,
        "author" : {
          "login" : "wiwa",
          "name" : "Win Wang",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1862202?u=67d3c93419e4dd2a110dc2135e1b5ebaf98919c2&v=4"
        },
        "body" : "nit: I think indenting the `if` would make these filters more readable.",
        "createdAt" : "2019-12-10T20:45:43Z",
        "updatedAt" : "2019-12-11T10:39:31Z",
        "lastEditedBy" : {
          "login" : "wiwa",
          "name" : "Win Wang",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1862202?u=67d3c93419e4dd2a110dc2135e1b5ebaf98919c2&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c5f2757f-d231-4e00-a23c-a32fe061acd1",
        "parentId" : "91af5d8d-1a4c-4566-91a8-3c9539356e8f",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This is how scalafmt formats this. Originally it used to indent `if` filters in for comprehensions but it got changed because it got weird in places like\r\n```scala\r\nfor {\r\n  a <- list()\r\n  b <- list()\r\n  if a > 2\r\n  if b < 1\r\n```",
        "createdAt" : "2019-12-11T10:10:05Z",
        "updatedAt" : "2019-12-11T10:39:33Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "da92e30ee6e1e5d61ccb46ecfc290af2da243900",
    "line" : 413,
    "diffHunk" : "@@ -1,1 +372,376 @@    classpath ++= (for {\n      dependency <- transitiveDependencies\n      if !dependency.isTargetRoot\n      entry <- exportClasspath(dependency)\n    } yield entry)"
  },
  {
    "id" : "20990175-09ab-45b5-b515-0961557f55f1",
    "prId" : 935,
    "comments" : [
      {
        "id" : "bacab39a-d016-4de2-b37d-724292ecbda7",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Would we care to have it in `bloop` itself?",
        "createdAt" : "2019-09-24T10:03:33Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b155f93a-736c-4b98-b3c0-0428620e2ea5",
        "parentId" : "bacab39a-d016-4de2-b37d-724292ecbda7",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "See reply to Marek's comment, this should ideally live in Pants",
        "createdAt" : "2019-09-26T15:49:03Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a95ae87fd9621161d156685f32480fcb7bb451a4",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@import scala.sys.process.Process\n\nobject BloopPants {\n\n  def main(argStrings: Array[String]): Unit = {"
  },
  {
    "id" : "c8e52e5a-5888-4cc8-becf-1a0bda673cf8",
    "prId" : 935,
    "comments" : [
      {
        "id" : "9599f482-16d6-4926-a268-939738b6d5f2",
        "parentId" : null,
        "author" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "body" : "how does this package relate to `scala.meta.internal.build.Pants*`? If pants require more configuration, then it should be placed together, for example in `build.pants.BloopPants`. Currently there is no way of knowing the difference without checking the content of those files",
        "createdAt" : "2019-09-25T07:52:19Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bc8deff8-7e5a-4ff0-9f1f-c040c2d98325",
        "parentId" : "9599f482-16d6-4926-a268-939738b6d5f2",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This logic is separate from the `build.Pants*` classes since it's a standalone command-line interface to export a pants build to Bloop while the `build.Pants*` classes are metals-specific and have the same structure as other `build.{Maven,Mill,Sbt,...}` classes. The `pantsbuild` package should have no dependencies on other parts of the Metals codebase.\r\n\r\nI have a branch to the main pants repository that contains the same PantsBloop code, which I'd like to contribute one day https://github.com/pantsbuild/pants/compare/master...olafurpg:bloop-install?expand=1. The reason I haven't opened that PR yet is because the solution in this PR works with any Pants version that the user has installed locally.",
        "createdAt" : "2019-09-26T15:48:32Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a95ae87fd9621161d156685f32480fcb7bb451a4",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@package scala.meta.internal.pantsbuild\n\nimport bloop.config.{Config => C}"
  },
  {
    "id" : "be899169-73eb-4108-96cd-6f2a6cdcd175",
    "prId" : 935,
    "comments" : [
      {
        "id" : "37a7a1aa-60b7-4b54-b447-f778da8d838b",
        "parentId" : null,
        "author" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "body" : "this branch starts at the line 91. It is way too complex and should be split into smaller units",
        "createdAt" : "2019-09-25T08:59:03Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b271865a-a6ba-4ea6-ac16-f4105e590011",
        "parentId" : "37a7a1aa-60b7-4b54-b447-f778da8d838b",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good point, the logic has been refactored now.",
        "createdAt" : "2019-09-27T14:22:36Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a95ae87fd9621161d156685f32480fcb7bb451a4",
    "line" : 625,
    "diffHunk" : "@@ -1,1 +623,627 @@    if (isVisited(name)) {\n      transitiveClasspath.getOrElse(name, Nil)\n    } else {\n      isVisited += name\n      transitiveClasspath.getOrElseUpdate(name, computeTransitiveClasspath())"
  },
  {
    "id" : "8377e4fd-3994-4d61-8670-37e3e3506859",
    "prId" : 935,
    "comments" : [
      {
        "id" : "498c1489-8422-45f2-9ab8-14ac9c6bcd0c",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I believe Jorge was strongly opposed to anything than bloop modifying the config file while it's working :thinking: ",
        "createdAt" : "2019-12-05T16:13:45Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d303ec68-ff12-4d33-82f2-2b8d978470dc",
        "parentId" : "498c1489-8422-45f2-9ab8-14ac9c6bcd0c",
        "author" : {
          "login" : "jvican",
          "name" : "Jorge",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "body" : "The config file can be modified while it's working, but it must be updated atomically. I don't remember being strongly opposed to this, but I do remember mentioning that tools that don't own these configuration files should never update them, that's something that only the original build tool can do. Let me know if this clarifies your thinking @tgodzik :smile:",
        "createdAt" : "2019-12-05T16:47:30Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "jvican",
          "name" : "Jorge",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dc6d2d52-0a57-4119-92d9-546d8b4164de",
        "parentId" : "498c1489-8422-45f2-9ab8-14ac9c6bcd0c",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "@jvican Thanks! That makes sense, I must have misunderstood previously.",
        "createdAt" : "2019-12-05T16:56:53Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "72d89d58-ef91-444b-8aef-d5ecac7cfb16",
        "parentId" : "498c1489-8422-45f2-9ab8-14ac9c6bcd0c",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Sounds great! I will follow up with a PR to make our file write operations atomic.\r\n\r\nWe use `_root_.bloop.config.write(json, out)` to write most of the JSON files in the Pants export. This step here happens only when the user creates a new file and we need to re-expand the file globs.",
        "createdAt" : "2019-12-05T20:24:45Z",
        "updatedAt" : "2019-12-05T20:24:45Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a95ae87fd9621161d156685f32480fcb7bb451a4",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@        if (!sources.contains(sourceStr)) {\n          sources += sourceStr\n          jsonFile.writeText(ujson.write(json, indent = 4))\n          scribe.info(s\"add source: $jsonFile\")\n        }"
  },
  {
    "id" : "4946a0b9-3bcc-430b-816a-93c84bc8694e",
    "prId" : 935,
    "comments" : [
      {
        "id" : "8a65a9e0-a18f-47a3-b15d-d3f311de777e",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Shouldn't we use the process runner from the bloopInstall function?",
        "createdAt" : "2019-12-05T16:27:53Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "44719716-aa84-4286-b029-6558fdbcf07a",
        "parentId" : "8a65a9e0-a18f-47a3-b15d-d3f311de777e",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "No, since that one launches `metals/slowTask` and we call several system processes in this step.",
        "createdAt" : "2019-12-05T19:24:11Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a95ae87fd9621161d156685f32480fcb7bb451a4",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +210,214 @@    ) ++ args.targets\n    val shortName = \"pants export-classpath export\"\n    SystemProcess.run(\n      shortName,\n      command,"
  }
]