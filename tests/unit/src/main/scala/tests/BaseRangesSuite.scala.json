[
  {
    "id" : "02f1bff8-cb34-4860-82ed-0f3c7f5761d4",
    "prId" : 1526,
    "comments" : [
      {
        "id" : "981c00fe-6e05-482c-a22d-4fdd5d6d09aa",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "So I originally had written a test that sorted the `Location`s that all came back and asserted that they were in the same order. However, I realized (I hope correctly), that this will actually implicitly test the same thing. If for some reason the references returned are out of order, this expected mapping with the string representation of what we gave the test won't match later on when we assert that the references returned match this. Let me know if this is indeed a good enough test for the actual ordering.",
        "createdAt" : "2020-03-24T13:43:42Z",
        "updatedAt" : "2020-03-26T06:02:00Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : "Chris Kipp",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9d8a30c9-0e9f-4a03-996e-35a4ef5c86af",
        "parentId" : "981c00fe-6e05-482c-a22d-4fdd5d6d09aa",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I don't think it will work that way though. We just replace all the ranges regardless of their sorting. But you can just add an assert . I will point to where to add it.",
        "createdAt" : "2020-03-24T17:04:18Z",
        "updatedAt" : "2020-03-26T06:02:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "13e263e8bec9aef93562dd691f75ec7caa748212",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@        )\n      }\n    val expected = files.map {\n      case (fileName, code) =>\n        fileName -> code.replaceAll(\"@@\", \"\")"
  }
]