[
  {
    "id" : "9950f436-1bcd-47e4-95ad-0e4ac51dfa75",
    "prId" : 1487,
    "comments" : [
      {
        "id" : "916693fd-6eaa-4fd0-ae85-0bbfb7f111f7",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Awesome!",
        "createdAt" : "2020-03-12T11:52:45Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55838e6c9f4127bc8d06a8d31a6df496a0b729a8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@      \"\"\"\n        |package a\n        |trait A { def <<1->0>>xxx: String = \"A\" }\n        |trait B extends A { override def <<2->1>>xxx: String = \"B -> \" + super.xxx }\n        |trait C extends A { override def <<3->1>>xxx: String = \"C -> \" + super.xxx }"
  },
  {
    "id" : "56ec4732-1c16-4f8b-beb8-96c83a1d7809",
    "prId" : 1487,
    "comments" : [
      {
        "id" : "cd767698-5eaf-446b-8fd1-dc86e0ff6fb6",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Same as in SuperHierarchyLspSuite, this can be simplified by finding the offset and using the scalameta Postion\r\n\r\n",
        "createdAt" : "2020-03-12T11:56:50Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a592a04a-d785-4a7c-ab59-583058482fa0",
        "parentId" : "cd767698-5eaf-446b-8fd1-dc86e0ff6fb6",
        "author" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "I can understand searching for <<1>> <<2>> until not found, but searching for every <<X->Y>> ?\r\nI might not get idea, can you provide more defails how it should work?",
        "createdAt" : "2020-03-13T15:59:59Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : "Krzysiek Bochenek",
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "50f8f564-c61d-4f58-b7ae-20ac1ad0eb4d",
        "parentId" : "cd767698-5eaf-446b-8fd1-dc86e0ff6fb6",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Ok, I was thinking we could make it simpler, but after thinking it might be more complex to rework.",
        "createdAt" : "2020-03-13T16:26:00Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55838e6c9f4127bc8d06a8d31a6df496a0b729a8",
    "line" : 293,
    "diffHunk" : "@@ -1,1 +291,295 @@  private def parse(\n      code: String\n  ): (Map[Int, Position], Map[Int, Option[Int]]) = {\n    var line: Int = 0\n    var character: Int = 0"
  }
]