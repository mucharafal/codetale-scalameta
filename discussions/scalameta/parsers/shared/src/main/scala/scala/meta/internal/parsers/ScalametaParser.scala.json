[
  {
    "id" : "0ec06eb1-e375-458c-8432-60068ff373dd",
    "prId" : 2329,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00e0aa37-cb8d-442d-84c5-a8c0a396b72b",
        "parentId" : null,
        "author" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "body" : "does this mean you will NOT keep braces for this single-stat block? i would prefer that you had. if block had braces, they need to be part of it, regardless of the number of stats.",
        "createdAt" : "2021-05-04T15:50:23Z",
        "updatedAt" : "2021-05-04T15:50:55Z",
        "lastEditedBy" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "9428e20a-3ad9-45e2-aefb-4185ff221a6f",
        "parentId" : "00e0aa37-cb8d-442d-84c5-a8c0a396b72b",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "body" : "That's only for indentation, that doesn't have braces at all.",
        "createdAt" : "2021-05-04T15:59:18Z",
        "updatedAt" : "2021-05-04T15:59:19Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "e64a0cb8-3c38-459c-9d7f-c05e2058a508",
        "parentId" : "00e0aa37-cb8d-442d-84c5-a8c0a396b72b",
        "author" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "body" : "zrozumiaÅ‚...",
        "createdAt" : "2021-05-04T16:00:54Z",
        "updatedAt" : "2021-05-04T16:01:00Z",
        "lastEditedBy" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b7c272cbd09e4a6d6a87945a1d3ed39b10379ec8",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +4229,4233 @@        if (in.observeIndented()) {\n          val block = autoPos(Term.Block(indented(templateStats())))\n          if (block.stats.size == 1) block.stats.head\n          else block\n        } else if (token.is[DefIntro]) {"
  },
  {
    "id" : "2c921b95-3feb-4e5d-9f6b-c38d7d4f560e",
    "prId" : 2328,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1261af5c-dcb7-4081-b5c5-314bf79a6766",
        "parentId" : null,
        "author" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "body" : "should this whole function be changed to:\r\n```\r\n    val edefsOrTemplate = if (token.is[LeftBrace]) {\r\n      // @S: pre template body cannot stub like post body can!\r\n      val (self, body) = templateBody(enumCaseAllowed)\r\n      if (token.is[KwWith] && self.name.is[Name.Anonymous] && self.decltpe.isEmpty) {\r\n        val edefs = body.map(ensureEarlyDef)\r\n        next()\r\n        Left(edefs)\r\n      } else {\r\n        Right(Template(Nil, Nil, self, body))\r\n      }\r\n    } else {\r\n      Left(Nil)\r\n    }\r\n    edefsOrTemplate match {\r\n      case Right(t) => t\r\n      case Left(edefs) =>\r\n        val parents = if (token.is[Colon]) Nil else templateParents(afterExtend)\r\n        template(edefs, parents, enumCaseAllowed)\r\n    }\r\n```",
        "createdAt" : "2021-05-04T15:20:57Z",
        "updatedAt" : "2021-05-04T15:21:11Z",
        "lastEditedBy" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "f1004921-4a3e-4740-8a5a-a8373f3dcf57",
        "parentId" : "1261af5c-dcb7-4081-b5c5-314bf79a6766",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "body" : "We should be fine as is, since early defs are not allowed in Dotty, so they will not exist with colons.\r\n\r\nIt would be probably good to remove early defs from Scala 3 dialect, but we could do that separately if needed.",
        "createdAt" : "2021-05-04T17:12:10Z",
        "updatedAt" : "2021-05-04T17:12:10Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3eaafa05ad72799c236cb981a55fd9f93403aaec",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4737,4741 @@      }\n    } else {\n      val parents = if (token.is[Colon]) Nil else templateParents(afterExtend)\n      template(Nil, parents, enumCaseAllowed)\n    }"
  },
  {
    "id" : "f90d963c-db0a-4cc7-a19b-08a8c31bc88e",
    "prId" : 2327,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "891d9e37-1a9d-4740-b824-9ec509c2cc22",
        "parentId" : null,
        "author" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "body" : "i am not sure i understand this. does this mean unquoting a mod requires `$(mod)`, with parens?",
        "createdAt" : "2021-05-04T15:04:02Z",
        "updatedAt" : "2021-05-05T09:12:55Z",
        "lastEditedBy" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "588ca7bb-3b91-4110-b985-827b04770078",
        "parentId" : "891d9e37-1a9d-4740-b824-9ec509c2cc22",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "body" : "It means as far as I can tell `$mod (` so essentially the constructor should be next.",
        "createdAt" : "2021-05-04T15:46:43Z",
        "updatedAt" : "2021-05-05T09:12:55Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "c313dace-fc58-4f3c-9793-45215c1ae04c",
        "parentId" : "891d9e37-1a9d-4740-b824-9ec509c2cc22",
        "author" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "body" : "ah, so this is not for `private class C(...)`, it's for `class C private(...)`? got it.",
        "createdAt" : "2021-05-04T15:53:39Z",
        "updatedAt" : "2021-05-05T09:12:55Z",
        "lastEditedBy" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8fcb000b8f81059d73eb92bba3e54f308f949da3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3574,3578 @@\n  def ctorModifiers(): Option[Mod] = token match {\n    case Unquote() if ahead(token.is[LeftParen]) => Some(unquote[Mod])\n    case Ellipsis(_) => Some(ellipsis(1, astInfo[Mod]))\n    case KwPrivate() => Some(accessModifier())"
  },
  {
    "id" : "c16048cc-d3f4-4298-bbb2-15a776f4a3e1",
    "prId" : 2337,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f72f66c6-525b-43bb-9f11-66ad9a90716d",
        "parentId" : null,
        "author" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "body" : "is this case tested? i thought this was the one that was failing for me originally, i don't see it in new tests.",
        "createdAt" : "2021-05-10T11:41:46Z",
        "updatedAt" : "2021-05-10T12:49:32Z",
        "lastEditedBy" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "dc13e3cc-4656-47fc-8f28-4437a73f5c55",
        "parentId" : "f72f66c6-525b-43bb-9f11-66ad9a90716d",
        "author" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "body" : "Yes, it's covered  - https://github.com/scalameta/scalameta/blob/9e05c5aa0e796c261c85d2e0bb2215034620ef18/tests/shared/src/test/scala-2.13/scala/meta/tests/tokenizers/TokensPositionSuite.scala#L704-L709",
        "createdAt" : "2021-05-10T11:43:28Z",
        "updatedAt" : "2021-05-10T12:49:32Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "acc5fc3bb21f95161ee3f67ea2223893c9219a12",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +2471,2475 @@                  Some(\n                    atPos(tree, tree)(\n                      Term.Param(Nil, atPos(name, name)(Name.Anonymous()), None, None)\n                    )\n                  )"
  },
  {
    "id" : "50b7fcd9-baeb-4813-a74f-5d7e5403b17d",
    "prId" : 2362,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fac92b1b-5069-42b4-81bb-c241131f6e6f",
        "parentId" : null,
        "author" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "body" : "unrelated question to method 10 lines above. why does it check for whitespace in two differently ways? isWhitespace vs is[Whitespace].",
        "createdAt" : "2021-05-24T14:23:36Z",
        "updatedAt" : "2021-05-24T14:26:05Z",
        "lastEditedBy" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "659fa954-5a9c-48fd-8058-216f8812bbb2",
        "parentId" : "fac92b1b-5069-42b4-81bb-c241131f6e6f",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "body" : "`isWhitespace` is only used to count spaces or tabs, so in reality it should be `isSpacesOrTabs`, but it's an inner function, so this should not be a big issue.",
        "createdAt" : "2021-05-24T14:43:04Z",
        "updatedAt" : "2021-05-24T14:43:04Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "9de0e6f29c477a94dd0d25192f6ede9366dbf63d",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +690,694 @@    countIndentAndNewlineIndex(tokenPosition)._1\n\n  private def currentIndentation: Int = {\n    in.currentIndentation\n  }"
  },
  {
    "id" : "4e737b07-6f68-4ddb-8de8-74039bb530d7",
    "prId" : 2348,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d22e5505-adf3-49de-b37e-d569412f7300",
        "parentId" : null,
        "author" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "body" : "does this version not allow type bounds?",
        "createdAt" : "2021-05-24T11:40:28Z",
        "updatedAt" : "2021-05-24T11:45:40Z",
        "lastEditedBy" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "9e5b1d8c-986a-45e8-b636-87c2e291cf5a",
        "parentId" : "d22e5505-adf3-49de-b37e-d569412f7300",
        "author" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "body" : "yep, but it is in line with scala/scala#9605",
        "createdAt" : "2021-05-24T12:03:28Z",
        "updatedAt" : "2021-05-24T12:03:28Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55606a8a37c6be603c7eecc2639a75573af72ad7",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1743,1747 @@              Type.Placeholder(typeBounds())\n            else\n              Type.Name(s\"${ident.value}_\")\n          }\n        case Literal() =>"
  },
  {
    "id" : "bae3b4c7-0f2e-44d3-90bc-7720c257f7aa",
    "prId" : 2375,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee952967-5084-4f76-b869-2525cb733415",
        "parentId" : null,
        "author" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "body" : "I found that for parsing cases we use `expr(location = BlockStat, ...)`: https://github.com/scalameta/scalameta/blob/c058f6dfd2d220a8cef2e44669f3adb393ff6d6d/scalameta/parsers/shared/src/main/scala/scala/meta/internal/parsers/ScalametaParser.scala#L3124\r\n\r\nI'm wondering if the same approach would work for `function` and `implicitClosure`",
        "createdAt" : "2021-06-02T16:18:35Z",
        "updatedAt" : "2021-06-02T16:18:35Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "27b92950-ec5b-4352-b25c-9b79df725091",
        "parentId" : "ee952967-5084-4f76-b869-2525cb733415",
        "author" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "body" : "I tried that and seems like `expr` usage instead of `blockExpr` fixes that problem - [commit](https://github.com/dos65/scalameta/commit/37f1fd38a7931d944d01b36dcf2098f7dabff4b3).\r\nI'm not fully sure if it fixes any additional cases but at least it looks more generic.\r\n@tgodzik wdyt?",
        "createdAt" : "2021-06-03T10:04:39Z",
        "updatedAt" : "2021-06-03T10:04:39Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "267f3a4e-eaba-45ba-a19e-ddefa159e05a",
        "parentId" : "ee952967-5084-4f76-b869-2525cb733415",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "body" : "That's a good idea! Thanks! And also changed!",
        "createdAt" : "2021-06-04T13:21:53Z",
        "updatedAt" : "2021-06-04T13:21:53Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "0aff6163-326d-48cc-9edc-73bd966cc203",
        "parentId" : "ee952967-5084-4f76-b869-2525cb733415",
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "body" : "Actually, it doesn't work after checking again. Reverted to the last version.",
        "createdAt" : "2021-06-04T13:29:58Z",
        "updatedAt" : "2021-06-04T13:29:58Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "389a314d447e5e7d47d5dd2a2d7705e582e21fe2",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +3084,3088 @@  }\n\n  def blockExpr(isBlockOptional: Boolean = false): Term = autoPos {\n    if (ahead(token.is[CaseIntro] || (token.is[Ellipsis] && ahead(token.is[KwCase])))) {\n      if (token.is[LeftBrace])"
  },
  {
    "id" : "19fd3085-81ab-497f-a605-70773a7ad384",
    "prId" : 2381,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2381",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18554ebb-bdcc-408c-a6e7-1526a5547038",
        "parentId" : null,
        "author" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "body" : "i think this branch is not tested. you don't use scala 2 in any test cases?",
        "createdAt" : "2021-06-16T11:35:15Z",
        "updatedAt" : "2021-06-16T11:35:47Z",
        "lastEditedBy" : {
          "login" : "kitbellew",
          "name" : "Albert Meltzer",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/7529386?u=c0f3ffdc4e75c9e95b1021c84eab59d669286f02&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      },
      {
        "id" : "364c155b-8e47-4ac7-8227-83e9a50149fa",
        "parentId" : "18554ebb-bdcc-408c-a6e7-1526a5547038",
        "author" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "body" : "For scala2 this part branch isn't involved because the condition has to be inside braces.\r\nThere are tests for scala2 `if`/`while` in [TermSuite](https://github.com/scalameta/scalameta/blob/main/tests/shared/src/test/scala/scala/meta/tests/parsers/TermSuite.scala).\r\n\r\n",
        "createdAt" : "2021-06-16T12:07:54Z",
        "updatedAt" : "2021-06-16T12:07:54Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : "Vadim Chelyshov",
          "avatarUrl" : "https://avatars.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4",
          "altName" : null
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6a40e10fbb565d4add07d2a11c4dac0475e61e73",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +2271,2275 @@\n  def condExprInParens[T <: Token: TokenInfo]: Term = {\n    if (dialect.allowSignificantIndentation) {\n      val forked = in.fork\n      val simpleExpr = condExpr()"
  }
]