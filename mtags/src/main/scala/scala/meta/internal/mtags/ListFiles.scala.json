[
  {
    "id" : "004662f5-1316-4625-ae0c-a62a69f13a81",
    "prId" : 889,
    "comments" : [
      {
        "id" : "9a7c81a2-63dd-46ad-8e4b-4ffc7f9d3535",
        "parentId" : null,
        "author" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "body" : "this should be in an extension method for `AbsolutePath`, like `list` or `children`",
        "createdAt" : "2019-09-02T09:08:48Z",
        "updatedAt" : "2019-09-02T09:44:25Z",
        "lastEditedBy" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1d94d47dda18e6abac0dc30392fcff0b3883fd5c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +6,10 @@\nobject ListFiles {\n  def apply(root: AbsolutePath): mutable.ArrayBuffer[AbsolutePath] = {\n    val buf = mutable.ArrayBuffer.empty[AbsolutePath]\n    foreach(root)(file => buf += file)"
  },
  {
    "id" : "b81e038a-4685-4c80-8e97-1e0ae62fe7f3",
    "prId" : 889,
    "comments" : [
      {
        "id" : "fd2ebf14-4008-48e9-9fde-2a8467d72aa4",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It would be useful to have the couple of methods to use like `map` or `forall` or `exist`. Shouldn't be difficult to do.",
        "createdAt" : "2019-09-02T09:15:44Z",
        "updatedAt" : "2019-09-02T09:22:18Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : "Tomasz Godzik",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1d94d47dda18e6abac0dc30392fcff0b3883fd5c",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +11,15 @@    buf\n  }\n  def foreach(root: AbsolutePath)(fn: AbsolutePath => Unit): Unit = {\n    val ls = Files.list(root.toNIO)\n    try {"
  },
  {
    "id" : "a2dfa04b-4877-4fcb-beaa-a2575a72141e",
    "prId" : 889,
    "comments" : [
      {
        "id" : "09eb4c0a-12bd-4c47-b3cb-bbcc6351e4a7",
        "parentId" : null,
        "author" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "body" : "The name can be misleading, as it lists both files and directories",
        "createdAt" : "2019-09-02T09:15:58Z",
        "updatedAt" : "2019-09-02T09:44:26Z",
        "lastEditedBy" : {
          "login" : "mzarnowski",
          "name" : "Marek Żarnowski",
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1d94d47dda18e6abac0dc30392fcff0b3883fd5c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +5,9 @@import scala.collection.mutable\n\nobject ListFiles {\n  def apply(root: AbsolutePath): mutable.ArrayBuffer[AbsolutePath] = {\n    val buf = mutable.ArrayBuffer.empty[AbsolutePath]"
  }
]