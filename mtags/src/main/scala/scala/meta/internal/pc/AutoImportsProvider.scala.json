[
  {
    "id" : "0b852026-1702-4748-b101-bfdbacadb824",
    "prId" : 1065,
    "comments" : [
      {
        "id" : "f17aa123-67b0-453b-888c-51252c4b8e20",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "@olafurpg is there a smarter way of doing this? If I omit it `autoImportPosition` fails because `pos.source` isn't loaded yet.",
        "createdAt" : "2019-12-10T12:36:55Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cef3eb22-6375-4678-a59b-59714b462993",
        "parentId" : "f17aa123-67b0-453b-888c-51252c4b8e20",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "There isn't. This is needed.",
        "createdAt" : "2019-12-10T14:19:56Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ebac6c35-ea68-4748-96c7-e414fd3b8d4e",
        "parentId" : "f17aa123-67b0-453b-888c-51252c4b8e20",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Fair enough! ¯\\\\\\_(ツ)\\_/¯",
        "createdAt" : "2019-12-10T14:21:45Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1e046b2b878d476d389f19bdcaa73ae4b7c121c9",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@    val pos = unit.position(params.offset)\n    // make sure the compilation unit is loaded\n    typedTreeAt(pos)\n    val importPosition = autoImportPosition(pos, params.text())\n    val context = doLocateImportContext(pos, importPosition)"
  },
  {
    "id" : "aac88e07-6d79-4cce-b65a-ba13a477ac46",
    "prId" : 1065,
    "comments" : [
      {
        "id" : "b517f8be-793e-406e-8347-e78a1ba42d94",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "this is needed since `search` above will return partially matching results, whereas we only want exact results for symbols.\r\n\r\n@olafurpg is there a different way we could do this? I tried, but I couldn't find a way to instruct `search` to only return exact matches",
        "createdAt" : "2019-12-10T15:44:58Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2a39d3f6-7b5b-4f1b-8366-d3a6f4057b20",
        "parentId" : "b517f8be-793e-406e-8347-e78a1ba42d94",
        "author" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It's possible to do exact searches and the index is optimized for this use-case, I can't remember the most relevant place to look into, maybe\r\n\r\nhttps://github.com/scalameta/metals/blob/24cfabf16cae3d6187a094e0711d71c125e9e79f/mtags/src/main/scala/scala/meta/internal/metals/WorkspaceSymbolQuery.scala#L35",
        "createdAt" : "2019-12-10T15:47:12Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : "Ólafur Páll Geirsson",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b0c3d3d5-d7be-427d-9267-8b59709d7ce7",
        "parentId" : "b517f8be-793e-406e-8347-e78a1ba42d94",
        "author" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I saw that, but it seems `exact` still produces a list of alternatives. Anyway, it's fast enough not to be a concern (it's upper bound by completions, by definition)",
        "createdAt" : "2019-12-10T15:48:48Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : "Gabriele Petronella",
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1e046b2b878d476d389f19bdcaa73ae4b7c121c9",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@\n    def isExactMatch(sym: Symbol, name: String): Boolean =\n      sym.name.dropLocal.decoded == name\n\n    symbols.result.collect {"
  }
]